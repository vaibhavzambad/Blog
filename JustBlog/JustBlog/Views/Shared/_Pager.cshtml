@model JustBlog.Models.ListViewModel

@* Read the current pages and total pages *@

@{
    var currentPage = ViewContext.RequestContext.HttpContext.
        Request["p"] != null ?
        int.Parse(ViewContext.RequestContext.HttpContext.
        Request["p"]) : 1;

    var totalPages = Math.Ceiling((double)Model.TotalPosts / 10);
}

@* Check if we need to display pagination links *@

@if (currentPage > 1 || currentPage < totalPages)
{
    var previous = string.Format("previous = {0}", currentPage - 1);
    var next = string.Format("next = {0}", currentPage + 1);

    @* If the view rendered for "search" action, append the pagination
        value with "&"  *@

if (ViewContext.RouteData.Values["action"].ToString()
    .Equals("search", StringComparison.OrdinalIgnoreCase))
{
    var s = String.Format("?s={0}", ViewContext.RequestContext.HttpContext.
        Request.QueryString["s"]);

    previous = string.Format("{0}&{1}", s, previous);
    next = string.Format("{0}&{1}", s, next);
}
else
{
    previous = string.Concat("?", previous);
    next = string.Concat("?", next);
}

    <!--pagination links-->
    <div class="pager">
        <a href="@previous" title="previous" class="previous"
           stype="visibility:@(currentPage > 1 ?
           "visible" : "collapse")"><< previous</a>
        <a href="@next" title="next" class="next"
           style="visibility:@(currentPage < totalPages ?
           "visible" : "collapse")">next >></a>
    </div>
}